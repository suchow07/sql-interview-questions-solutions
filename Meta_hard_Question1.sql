-- Meta SQL Question
-- Which countries have risen in the rankings based on the number of comments between 
-- Dec 2019 vs Jan 2020? Hint: Avoid gaps between ranks when ranking countries.

CREATE TABLE comments_count (
    user_id INT,
    created_at DATETIME,
    number_of_comments INT
);
INSERT INTO comments_count (user_id, created_at, number_of_comments)
VALUES
(18, '2019-12-29 00:00:00', 1),
(25, '2019-12-21 00:00:00', 1),
(78, '2020-01-04 00:00:00', 1),
(37, '2020-02-01 00:00:00', 1),
(41, '2019-12-23 00:00:00', 1),
(99, '2020-02-02 00:00:00', 1),
(21, '2019-12-28 00:00:00', 1),
(18, '2020-01-31 00:00:00', 1),
(37, '2020-02-11 00:00:00', 1),
(58, '2020-01-26 00:00:00', 1),
(32, '2020-01-10 00:00:00', 1),
(24, '2020-02-03 00:00:00', 1),
(58, '2020-01-04 00:00:00', 1),
(8, '2020-02-10 00:00:00', 1),
(18, '2019-12-17 00:00:00', 1),
(18, '2019-12-30 00:00:00', 1),
(50, '2020-01-31 00:00:00', 1),
(82, '2019-12-22 00:00:00', 1),
(52, '2019-12-31 00:00:00', 1),
(78, '2020-02-10 00:00:00', 1),
(21, '2020-01-08 00:00:00', 1),
(4, '2019-12-22 00:00:00', 1),
(18, '2020-01-02 00:00:00', 1),
(89, '2019-12-25 00:00:00', 1),
(46, '2020-01-23 00:00:00', 1),
(32, '2020-01-17 00:00:00', 1),
(41, '2020-01-03 00:00:00', 1),
(8, '2020-02-05 00:00:00', 1),
(24, '2019-12-29 00:00:00', 2),
(56, '2019-12-25 00:00:00', 1),
(18, '2020-02-03 00:00:00', 1),
(56, '2019-12-21 00:00:00', 1),
(34, '2020-01-08 00:00:00', 1),
(27, '2020-01-10 00:00:00', 1),
(33, '2020-01-22 00:00:00', 1),
(78, '2020-01-07 00:00:00', 1),
(58, '2020-02-02 00:00:00', 1),
(82, '2019-12-30 00:00:00', 1),
(89, '2020-01-28 00:00:00', 1),
(46, '2019-12-23 00:00:00', 1),
(8, '2020-01-13 00:00:00', 1),
(9, '2020-02-02 00:00:00', 1),
(89, '2020-01-07 00:00:00', 1),
(87, '2020-01-08 00:00:00', 1),
(37, '2019-12-15 00:00:00', 1),
(95, '2020-02-10 00:00:00', 1),
(41, '2019-12-27 00:00:00', 1),
(82, '2020-01-16 00:00:00', 1),
(32, '2020-01-13 00:00:00', 1),
(99, '2020-01-05 00:00:00', 1),
(27, '2020-01-25 00:00:00', 1),
(52, '2020-01-01 00:00:00', 1),
(32, '2020-01-06 00:00:00', 1),
(56, '2019-12-19 00:00:00', 1),
(78, '2019-12-30 00:00:00', 1),
(33, '2020-01-28 00:00:00', 1),
(33, '2019-12-21 00:00:00', 1),
(32, '2020-01-04 00:00:00', 2),
(32, '2019-12-21 00:00:00', 1),
(89, '2020-01-16 00:00:00', 1),
(89, '2019-12-21 00:00:00', 1),
(52, '2019-12-20 00:00:00', 1),
(78, '2020-02-15 00:00:00', 1),
(32, '2019-12-23 00:00:00', 1),
(4, '2020-02-15 00:00:00', 1),
(99, '2020-02-03 00:00:00', 1),
(87, '2020-02-15 00:00:00', 1),
(34, '2020-01-15 00:00:00', 1),
(34, '2020-01-29 00:00:00', 1),
(32, '2019-12-18 00:00:00', 1),
(25, '2020-02-14 00:00:00', 1),
(89, '2020-01-05 00:00:00', 1),
(58, '2020-01-05 00:00:00', 1),
(46, '2020-01-29 00:00:00', 1),
(9, '2020-01-21 00:00:00', 1),
(9, '2020-01-06 00:00:00', 1),
(78, '2019-12-25 00:00:00', 1),
(46, '2019-12-29 00:00:00', 1),
(95, '2020-01-10 00:00:00', 1),
(95, '2020-01-17 00:00:00', 1),
(25, '2020-01-15 00:00:00', 1),
(87, '2019-12-25 00:00:00', 1),
(89, '2020-02-12 00:00:00', 1),
(25, '2020-01-20 00:00:00', 1),
(34, '2019-12-27 00:00:00', 1),
(27, '2019-12-21 00:00:00', 1),
(8, '2020-01-22 00:00:00', 1),
(37, '2020-01-19 00:00:00', 2),
(50, '2020-01-21 00:00:00', 1),
(18, '2019-12-27 00:00:00', 1),
(82, '2020-01-23 00:00:00', 1),
(21, '2019-12-24 00:00:00', 1),
(37, '2019-12-17 00:00:00', 1),
(33, '2019-12-31 00:00:00', 1),
(50, '2020-01-28 00:00:00', 1),
(32, '2019-12-19 00:00:00', 1),
(4, '2020-01-01 00:00:00', 1),
(22, '2020-02-15 00:00:00', 1),
(31, '2020-01-28 00:00:00', 1),
(22, '2020-04-04 00:00:00', 1),
(31, '2020-01-03 00:00:00', 1),
(22, '2019-12-19 00:00:00', 1),
(31, '2020-02-15 00:00:00', 1),
(22, '2019-12-01 00:00:00', 1),
(31, '2020-04-04 00:00:00', 1),
(16, '2019-12-27 00:00:00', 1),
(5, '2020-01-23 00:00:00', 1),
(7, '2019-12-24 00:00:00', 1),
(11, '2019-12-17 00:00:00', 1),
(61, '2019-12-31 00:00:00', 1);



CREATE TABLE fb_active_users (
    user_id INT,
    name VARCHAR(100),
    status VARCHAR(20),
    country VARCHAR(50)
);
INSERT INTO fb_active_users (user_id, name, status, country)
VALUES
(33, 'Amanda Leon', 'open', 'Australia'),
(27, 'Jessica Farrell', 'open', 'Luxembourg'),
(18, 'Wanda Ramirez', 'open', 'USA'),
(50, 'Samuel Miller', 'closed', 'Brazil'),
(16, 'Jacob York', 'open', 'Australia'),
(25, 'Natasha Bradford', 'closed', 'USA'),
(34, 'Donald Ross', 'closed', 'China'),
(52, 'Michelle Jimenez', 'open', 'USA'),
(11, 'Theresa John', 'open', 'China'),
(37, 'Michael Turner', 'closed', 'Australia'),
(32, 'Catherine Hurst', 'closed', 'Mali'),
(61, 'Tina Turner', 'open', 'Luxembourg'),
(4, 'Ashley Sparks', 'open', 'China'),
(82, 'Jacob York', 'closed', 'USA'),
(87, 'David Taylor', 'closed', 'USA'),
(78, 'Zachary Anderson', 'open', 'China'),
(5, 'Tiger Leon', 'closed', 'China'),
(56, 'Theresa Weaver', 'closed', 'Brazil'),
(21, 'Tonya Johnson', 'closed', 'Mali'),
(89, 'Kyle Curry', 'closed', 'Mali'),
(7, 'Donald Jim', 'open', 'USA'),
(22, 'Michael Bone', 'open', 'Canada'),
(31, 'Sara Michaels', 'open', 'Denmark');


-- Solution 
WITH monthly_comments AS (
    SELECT 
        u.country, 
        DATE_FORMAT(c.created_at, '%Y-%m-01') AS month_start,
        SUM(c.number_of_comments) AS total_comments
    FROM fb_comments_count c
    JOIN fb_active_users u
        ON c.user_id = u.user_id
    WHERE CAST(c.created_at AS DATE) >= '2019-12-01'
        AND CAST(c.created_at AS DATE) <= '2020-01-31'
    GROUP BY u.country, DATE_FORMAT(c.created_at, '%Y-%m-01')
),
december AS (
    SELECT 
        country,
        total_comments,
        DENSE_RANK() OVER (ORDER BY total_comments DESC) AS rn_dec
    FROM monthly_comments
    WHERE month_start = '2019-12-01'
),
january AS (
    SELECT 
        country, 
        total_comments,
        DENSE_RANK() OVER (ORDER BY total_comments DESC) AS rn_jan
    FROM monthly_comments
    WHERE month_start = '2020-01-01'
),
rank_compared AS (
    SELECT 
        d.country, 
        d.rn_dec, 
        j.rn_jan
    FROM december d
    INNER JOIN january j
        ON d.country = j.country
)
SELECT country
FROM rank_compared
WHERE rn_dec > rn_jan
ORDER BY rn_dec;

